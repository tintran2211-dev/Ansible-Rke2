---
- name: Clone Proxmox VMs from a template
  hosts: localhost
  gather_facts: no
  vars:
    api_url: "https://192.168.3.10:8006/api2/json"  # URL API của Proxmox
    api_user: "tint"                               # Tên đăng nhập
    api_password: "12345678"                       # Mật khẩu
    source_vmid: 102                               # VMID của máy ảo mẫu
    source_node: "pve"                             # Node nguồn
    num_vms_to_clone: 10                            # Số lượng máy ảo cần sao chép
    starting_newid: 120                            # New VMID bắt đầu
    starting_index: 1                              # Số node bắt đầu
    cloned_vm_ids: []                              # Danh sách các VM ID đã sao chép

  tasks:
    - name: Get Proxmox API ticket
      uri:
        url: "{{ api_url }}/access/ticket"
        method: POST
        body_format: form-urlencoded
        body:
          username: "{{ api_user }}"
          password: "{{ api_password }}"
          realm: "pve"                              # Đặt realm là Proxmox VE
        headers:
          Content-Type: application/x-www-form-urlencoded
        validate_certs: no
      register: login_response
      failed_when: login_response.status != 200
      retries: 3
      delay: 5

    - name: Check login response
      debug:
        var: login_response

    - name: Fail if login unsuccessful
      fail:
        msg: "Failed to authenticate with Proxmox API"
      when: login_response.status != 200

    - set_fact:
        proxmox_ticket: "{{ login_response.json.data.ticket }}"
        csrf_token: "{{ login_response.json.data.CSRFPreventionToken }}"

    - name: Clone VMs
      loop: "{{ range(0, num_vms_to_clone) | list }}"
      vars:
        newid: "{{ starting_newid + item }}"
        newname: "host{{ starting_index + item }}"
      uri:
        url: "{{ api_url }}/nodes/{{ source_node }}/qemu/{{ source_vmid }}/clone"
        method: POST
        headers:
          Cookie: "PVEAuthCookie={{ proxmox_ticket }}"
          CSRFPreventionToken: "{{ csrf_token }}"
          Content-Type: application/x-www-form-urlencoded
        body_format: form-urlencoded
        body:
          newid: "{{ newid }}"
          name: "{{ newname }}"
          target: "{{ source_node }}"
        validate_certs: no
      register: clone_response

    # - set_fact:
    #     cloned_vm_ids: "{{ cloned_vm_ids + [newid] }}"   # Thêm newid vào danh sách các VM ID đã sao chép

    # - name: Debug new VM IDs and names
    #   debug:
    #     msg: "Cloned from VM ID: {{ source_vmid }}, New VM ID: {{ item }}, New VM Name: {{ 'host' + (starting_index + loop.index0) | string }}"
    #   loop: "{{ cloned_vm_ids }}"
